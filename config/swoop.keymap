#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define LYDWARF 0
#define LYLEFT 1
#define LYRIGHT 2
#define LYNUM 3
#define LYROW 4
#define LYFN 5
#define LYSETTINGS 6

&sk {
    quick-release;
 };

/ {
	behaviors {

		gqt: global-quick-tap {
			compatible = "zmk,behavior-hold-tap";
			label = "GLOBAL_QUICK_TAP";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <125>;
			global-quick-tap;
			bindings = <&kp>, <&kp>;
		};

		glt: global-layer-tap {
			compatible = "zmk,behavior-hold-tap";
			label = "GLOBAL_LAYER_TAP";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <200>;
			quick-tap-ms = <125>;
			global-quick-tap;
			bindings = <&mo>, <&kp>;
		};
	};

	
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			label = "Base";
			bindings = <
			&kp F &kp L &kp H &kp D &kp V           		&kp Z &kp G  &kp O		&kp U   	&kp DOT 
			&kp S &kp R &kp N &kp T &kp M           		&kp P &kp Y  &kp E		&kp I 		&kp A
			&kp X &kp J &kp B &kp K &kp Q           		&kp C &kp W  &kp  SQT 	&kp  COMMA 	&kp  SEMICOLON
			&kp ESC &glt LYLEFT ENTER &glt LYNUM TAB		&glt LYROW BACKSPACE &glt LYRIGHT SPACE &kp DELETE
			>;
		};

		left_layer {
			label = "Left";
			bindings = <
			&kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PLAY_PAUSE &none		&none &kp HOME &kp PG_DN &kp PG_UP &kp END
			&sk LGUI &sk LALT &sk LSHIFT &sk LCTRL &caps_word				&kp CAPSLOCK &kp LEFT &kp DOWN &kp UP &kp RIGHT
			&kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &none					&none &kp BACKSPACE &kp SPACE &kp DELETE &kp ENTER 
			&trans &trans &trans											&kp BACKSPACE &kp SPACE &kp DELETE
			>;
		};

		right_layer {
			label = "Right";
			bindings = <
			&kp LT &kp LBRC &kp LBKT &kp LPAR &kp TILDE					&kp CARET &kp RPAR &kp RBKT &kp RBRC &kp GT
			&kp MINUS &kp STAR &kp EQUAL &kp UNDERSCORE &kp DOLLAR		&kp HASH &sk RCTRL &sk RSHIFT &sk RALT &sk RGUI
			&kp PLUS &kp PIPE &kp AT &kp FSLH &kp PERCENT				&kp GRAVE &kp BSLH &kp AMPERSAND &kp QUESTION &kp EXCLAMATION
			&kp ESC &kp ENTER &kp TAB									&trans &trans &trans
			>;
		};

		number_layer {
			label = "Number";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &none			&none &kp N7 &kp N8 &kp N9 &none
			&kp F5 &kp F6 &kp F7 &kp F8 &none			&kp DOT &kp N4 &kp N5 &kp N6 &kp MINUS
			&kp F9 &kp F10 &kp F11 &kp F12 &none		&kp FSLH &kp N1 &kp N2 &kp N3 &kp BSLH
			&trans &trans &trans						&kp BACKSPACE &kp N0 &kp DELETE
			>;
		};

		numrow_layer {
			label = "Media";
			bindings = <
			&kp EXCLAMATION &kp AT &kp HASH &kp DOLLAR &kp PERCENT		&kp CARET &kp AMPERSAND &kp STAR &kp LPAR &kp RPAR
			&kp N1 &kp N2 &kp N3 &kp N4 &kp N5							&kp N6 &kp N7 &kp N8 &kp N9 &kp N0
			&bt BT_CLR &bt BT_PRV &bt BT_NXT &bt OUT_TOG &none			&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
			&kp ESC &kp ENTER &kp TAB									&trans &trans &trans

			>;
		};

/*			
			&none &none &none &none &none			&none &none &none &none &none
			&none &none &none &none &none			&none &none &none &none &none
			&none &none &none &none &none			&none &none &none &none &none
			&trans &trans &trans					&trans &trans &trans
*/

	};
};

