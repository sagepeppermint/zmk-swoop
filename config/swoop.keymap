#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define DWARF 0
#define LEFT 1
#define RIGHT 2
#define NUM 3
#define SYM 4
#define FN 5
#define SETTINGS 6

&sk {
    quick-release;
 };

/ {
	behaviors {

	};

	
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			label = "Base";
			bindings = <
			&kp F &kp L &kp H &kp D &kp V           &kp Z &kp G  &kp O		&kp U   	&kp DOT 
			&kp S &kp R &kp N &kp T &kp M           &kp P &kp Y  &kp E		&kp I 		&kp A
			&kp X &kp J &kp B &kp K &kp Q           &kp C &kp W  &kp  SQT 	&kp  COMMA 	&kp  SEMICOLON
			&lt NUM ESC &kp ENTER &lt LEFT TAB		&lt RIGHT BACKSPACE &kp SPACE &kp DELETE
			>;
		};

		left_layer {
			label = "Left";
			bindings = <
			&kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PLAY_PAUSE &none		&none &kp HOME &kp PG_DN &kp PG_UP &kp END
			&sk LGUI &sk LALT &sk LSHIFT &sk LCTRL &caps_word				&kp CAPSLOCK &kp LEFT &kp DOWN &kp UP &kp RIGHT
			&kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &none					&none &kp ENTER &none &none &none
			&trans &trans &trans											&kp BACKSPACE &kp SPACE &kp DELETE
			>;
		};

		right_layer {
			label = "Right";
			bindings = <
			&kp LT &kp LBRC &kp LBKT &kp LPAR &kp TILDE					&kp CARET &kp RPAR &kp RBKT &kp RBRC &kp GT
			&kp MINUS &kp STAR &kp EQUAL &kp UNDERSCORE &kp DOLLAR		&kp HASH &sk RCTRL &sk RSHIFT &sk RALT &sk RGUI
			&kp PLUS &kp PIPE &kp AT &kp FSLH &kp PERCENT				&kp GRAVE &kp BSLH &kp AMPERSAND &kp QUESTION &kp EXCLAMATION
			&kp ESC &kp ENTER &kp TAB									&trans &trans &trans
			>;
		};

		number_layer {
			label = "Number";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &none			&none &kp N7 &kp N8 &kp N9 &none
			&kp F5 &kp F6 &kp F7 &kp F8 &none			&kp DOT &kp N4 &kp N5 &kp N6 &kp MINUS
			&kp F9 &kp F10 &kp F11 &kp F12 &none		&kp FSLH &kp N1 &kp N2 &kp N3 &kp BSLH
			&trans &trans &trans						&kp BACKSPACE &kp N0 &trans
			>;
		};

		media_layer {
			label = "Media";
			bindings = <
			&none &none &none &none &none			&none &none &kp C_BRI_DN &kp C_BRI_UP &none
			&kp LGUI &kp LALT &kp LSHIFT &kp LCTRL &none			&bt BT_CLR &kp C_PREVIOUS &kp C_VOLUME_DOWN &kp C_VOL_UP &kp C_NEXT
			&none &none &none &none &none			&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
			&trans &trans &trans					&kp C_STOP &kp C_PLAY_PAUSE &kp C_MUTE

			>;
		};

		number_layer {
			label = "Number";
			bindings = <
			&kp LBKT &kp N7 &kp N8 &kp N9 &kp RBKT			&none &none &none &none &none
			&kp FSLH &kp N4 &kp N5 &kp N6 &kp BSLH			&none &kp RCTRL &kp RSHIFT &kp RALT &kp RGUI
			&kp GRAVE &kp N1 &kp N2 &kp N3 &kp EQUAL			&none &none &none &none &none
			&kp DOT &kp N0 &kp MINUS					&trans &trans &trans

			>;
		};


		function_layer {
			label = "Function";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp PRINTSCREEN			&none &none &none &none &none
			&kp F5 &kp F6 &kp F7 &kp F8 &kp SCROLLLOCK			&none &kp RCTRL &kp RSHIFT &kp RALT &kp RGUI
			&kp F9 &kp F10 &kp F11 &kp F12 &kp PAUSE_BREAK			&none &none &none &none &none
			&kp K_APP &kp SPACE &kp TAB					&trans &trans &trans

			>;
		};


/*			
			&none &none &none &none &none			&none &none &none &none &none
			&none &none &none &none &none			&none &none &none &none &none
			&none &none &none &none &none			&none &none &none &none &none
			&trans &trans &trans					&trans &trans &trans
*/

	};
};

