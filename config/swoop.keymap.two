#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "mouse.dtsi"

// Layer definitions
#define LYDWARF 0
#define LYQWERTY 1
#define LYNAV 2
#define LYNUM 3
#define LYSYM 4
#define LYFN 5

// Key sides
#define KEYS_LEFT 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 
#define KEYS_RIGHT 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define KEYS_LEFT_THUMB 30 31 32
#define KEYS_RIGHT_THUMB 33 34 35

// Tidy keys
#define XXX &none
#define ___ &trans

/ {
	behaviors {

		hml: homerow-mod-left {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MOD_LEFT";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <300>;
			quick-tap-ms = <175>;
			global-quick-tap-ms = <150>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <KEYS_RIGHT KEYS_RIGHT_THUMB>;
			hold-trigger-on-release;
		};

		hmr: homerow-mod-right {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MOD_RIGHT";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <300>;
			quick-tap-ms = <175>;
			global-quick-tap-ms = <150>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <KEYS_LEFT KEYS_LEFT_THUMB>;
			hold-trigger-on-release;
		};

		tlt: thumb-layer-tap {
			compatible = "zmk,behavior-hold-tap";
			label = "THUMB_LAYER_TAP";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <200>;
			quick-tap-ms = <175>;
			global-quick-tap-ms = <150>;
			bindings = <&mo>, <&kp>;
		};

		alttab: swapper-alt-tab {
			compatible = "zmk,behavior-tri-state";
			label = "SWAPPER_ALT_TAB";
			#binding-cells = <0>;
			bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
			ignored-key-positions = <27 22>;
		};

		ctrltab: swapper-ctrl-tab {
			compatible = "zmk,behavior-tri-state";
			label = "SWAPPER_CTRL_TAB";
			#binding-cells = <0>;
			bindings = <&kt LCTRL>, <&kp TAB>, <&kt LCTRL>;
			ignored-key-positions = <27 22>;
		};

		guitab: swapper-gui-tab {
			compatible = "zmk,behavior-tri-state";
			label = "SWAPPER_GUI_TAB";
			#binding-cells = <0>;
			bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
			ignored-key-positions = <27 22>;
		};
		
		numberword: number-word {
			compatible = "zmk,behavior-caps-word";
			label = "NUMBER_WORD";
			#binding-cells = <0>;
			layers = <LYNUM>;
			continue-list = <BACKSPACE DELETE>;
			ignore-numbers;
		};

		capitalword: capital-word {
			compatible = "zmk,behavior-caps-word";
			label = "CAPITAL_WORD";
			#binding-cells = <0>;
			mods = <MOD_LSFT>;
			continue-list = <UNDERSCORE BACKSPACE DELETE FSLH>;
						ignore-alphas;
						ignore-numbers;
						ignore-modifiers;
		};
	};

	combos {
		compatible = "zmk,combos";

		combo-numword {
			timeout-ms = <50>;
			global-quick-tap-ms = <150>;
			key-positions = <6 7>;
			layers = <LYDWARF LYQWERTY LYNUM>;
			bindings = <&numberword>;
		};
		
		combo-esc {
			timeout-ms = <50>;
			global-quick-tap-ms = <150>;
			key-positions = <1 2>;
			layers = <LYDWARF LYQWERTY>;
			bindings = <&kp ESC>;
		};

		combo-capitalword {
			timeout-ms = <50>;
			global-quick-tap-ms = <150>;
			key-positions = <2 3>;
			layers = <LYDWARF LYQWERTY>;
			bindings = <&capitalword>;
		};

	};
	
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			label = "Base";
			bindings = <
			&kp F &kp L &kp H &kp D &kp V           						&kp Z &kp G  &kp O &kp U &kp DOT 
			&kp S &kp R &kp N &kp T &kp M        							&kp P &kp Y &kp E &kp I &kp A
			&kp X &kp J &kp B &kp K &kp Q           						&kp C &kp W &kp SQT &kp COMMA &kp SEMICOLON
			&kp DELETE &kp BACKSPACE &kp ENTER 								&kp TAB &kp SPACE &kp ESC
			>;
		};

		qwerty_layer {
			label = "QWERTY";
			bindings = <
			&kp Q &kp W &kp E &kp R &kp T									&kp Y &kp U  &kp I &kp O &kp P 
			&kp A &kp S &kp D &kp F &kp G									&kp H &kp J &kp K &kp L &kp SEMICOLON
			&kp Z &kp X &kp C &kp V &kp B									&kp N &kp M &kp COMMA &kp DOT &kp SQT
			&kp DELETE &tlt LYNAV BACKSPACE &tlt LYNUM ENTER 				&tlt LYFN TAB &tlt LYSYM SPACE &kp ESC 			
			>;
		};

		number_navigation_layer {
			label = "Number and navigation";
			bindings = <
			XXX XXX XXX XXX XXX												&kp PG_UP &kp HOME &kp UP &kp END XXX
			&kp N1 &kp N2 &kp N3 &kp N4 &kp N5								&kp PG_DN &kp LEFT &kp DOWN &kp RIGHT XXX
			&kp N6 &kp N7 &kp N8 &kp N9 &kp N0								XXX XXX XXX XXX XXX
			___ ___ ___														___ ___ ___
			>;
		};

		symbol_layer {
			label = "Symbol";
			bindings = <
			&kp SQT &kp DQT &kp CARET &kp QUESTION &kp GRAVE				&kp LEFT_BRACE &kp LESS_THAN &kp COLON &kp GREATER_THAN &kp RIGHT_BRACE
			&kp EXCLAMATION &kp AT &kp HASH &kp DOLLAR &kp PERCENT			&kp LEFT_BRACKET &kp LEFT_PARENTHESIS &kp UNDERSCORE &kp RIGHT_PARENTHESIS &kp RIGHT_BRACKET
			&kp PIPE &kp SEMICOLON &kp AMPERSAND &kp BSLH &kp TILDE			&kp STAR &kp FSLH &kp MINUS &kp PLUS &kp EQUAL
			___ ___ ___														___ ___ ___
			>;
		};

		navigation_layer {
			label = "Navigation";
			bindings = <
			&kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &kp C_PLAY_PAUSE &kp CAPS	&capitalword &kp HOME &kp PG_DN &kp PG_UP &kp END 
			&kp LGUI &kp LALT &kp LSHIFT &kp LCTRL &kp LS(LC(LA(LGUI)))		&kp LG(UP) &kp LEFT &kp DOWN &kp UP &kp RIGHT
			&kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) XXX						&kp LG(DOWN) &ctrltab &kp LS(TAB) &alttab &guitab 
			___ ___ ___														&kp TAB &kp SPACE &kp ESC
			>;
		};

		number_layer {
			label = "Number";
			bindings = <
			XXX XXX XXX XXX XXX												XXX &kp N7 &kp N8 &kp N9 XXX
			&kp LGUI &kp LALT &kp LSHIFT &kp LCTRL XXX						XXX &kp N4 &kp N5 &kp N6 &kp N0
			&guitab &alttab &kp LS(TAB) &ctrltab XXX						&kp N0 &kp N1 &kp N2 &kp N3 XXX
			___ ___ ___														&kp BACKSPACE &kp SPACE &kp DELETE
			>;
		};

		symbol_layer {
			label = "Symbol";
			bindings = <
			&kp LT &kp LBRC &kp LBKT &kp LPAR &kp TILDE						&kp CARET &kp RPAR &kp RBKT &kp RBRC &kp GT
			&kp MINUS &kp STAR &kp EQUAL &kp UNDERSCORE &kp DOLLAR			&kp HASH &kp RCTRL &kp RSHIFT &kp RALT &kp RGUI
			&kp PLUS &kp PIPE &kp AT &kp FSLH &kp PERCENT					&kp GRAVE &kp BSLH &kp AMPERSAND &kp QUESTION &kp EXCLAMATION
			&kp DELETE &kp BACKSPACE &kp ENTER								___ ___ ___
			>;
		};

		function_layer {
			label = "Function";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp PRINTSCREEN						&to LYQWERTY &to LYDWARF &kp C_BRI_DN &kp C_BRI_UP &kp C_AL_CALC
			&kp F5 &kp F6 &kp F7 &kp F8 &kp SCROLLLOCK						&out OUT_TOG &kp RCTRL &kp RSHIFT &kp RALT &kp RGUI
			&kp F9 &kp F10 &kp F11 &kp F12 &kp PAUSE_BREAK					&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
			&kp DELETE &kp BACKSPACE &kp K_APP								___ ___ ___
			>;
		};

	};
};
