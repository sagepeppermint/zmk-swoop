#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "mouse.dtsi"

// Layer definitions
#define LYDWARF 0
#define LYQWERTY 1
#define LYNAV 2
#define LYNUM 3
#define LYSYML 4
#define LYSYMR 5
#define LYFN 6
#define LYMEDIA 7
#define LYMOUSE 8
#define LYNUMR 9
#define LYSCT 10

// Key sides
#define KEYS_LEFT 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 
#define KEYS_RIGHT 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define KEYS_LEFT_THUMB 30 31 32
#define KEYS_RIGHT_THUMB 33 34 35

// Tidy keys
#define XXX &none
#define ___ &trans

&sk {  // sticky-key config
	release-after-ms = <600>;  // release after 0.6s
	quick-release;             // no double capitalization when rolling keys
};

/ {
	behaviors {

		hml: homerow-mod-left {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MOD_LEFT";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <300>;
			quick-tap-ms = <175>;
			global-quick-tap-ms = <220>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <KEYS_RIGHT KEYS_RIGHT_THUMB>;
			hold-trigger-on-release;
		};

		hmr: homerow-mod-right {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MOD_RIGHT";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <300>;
			quick-tap-ms = <175>;
			global-quick-tap-ms = <220>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <KEYS_LEFT KEYS_LEFT_THUMB>;
			hold-trigger-on-release;
		};

		hll: homerow-layer-left {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_LAYER_LEFT";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <300>;
			quick-tap-ms = <175>;
			global-quick-tap-ms = <220>;
			bindings = <&mo>, <&kp>;
			hold-trigger-key-positions = <KEYS_RIGHT KEYS_RIGHT_THUMB>;
		};

		hlr: homerow-layer-right {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_LAYER_RIGHT";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <300>;
			quick-tap-ms = <175>;
			global-quick-tap-ms = <220>;
			bindings = <&mo>, <&kp>;
			hold-trigger-key-positions = <KEYS_LEFT KEYS_LEFT_THUMB>;
		};

		tlt: thumb-layer-tap {
			compatible = "zmk,behavior-hold-tap";
			label = "THUMB_LAYER_TAP";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <175>;
			quick-tap-ms = <175>;
			global-quick-tap-ms = <220>;
			bindings = <&mo>, <&kp>;
		};

		alttab: swapper-alt-tab {
			compatible = "zmk,behavior-tri-state";
			label = "SWAPPER_ALT_TAB";
			#binding-cells = <0>;
			bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
			ignored-key-positions = <17>;
		};

		ctrltab: swapper-ctrl-tab {
			compatible = "zmk,behavior-tri-state";
			label = "SWAPPER_CTRL_TAB";
			#binding-cells = <0>;
			bindings = <&kt LCTRL>, <&kp TAB>, <&kt LCTRL>;
			ignored-key-positions = <17>;
		};

		guitab: swapper-gui-tab {
			compatible = "zmk,behavior-tri-state";
			label = "SWAPPER_GUI_TAB";
			#binding-cells = <0>;
			bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
			ignored-key-positions = <17>;
		};
		
		numberword: number-word {
			compatible = "zmk,behavior-caps-word";
			label = "NUMBER_WORD";
			#binding-cells = <0>;
			layers = <LYNUMR>;
			continue-list = <BACKSPACE DELETE DOT COMMA FSLH BSLH>;
			ignore-numbers;
			ignore-modifiers;
		};

		capitalword: capital-word {
			compatible = "zmk,behavior-caps-word";
			label = "CAPITAL_WORD";
			#binding-cells = <0>;
			mods = <MOD_LSFT>;
			continue-list = <UNDERSCORE BACKSPACE DELETE FSLH>;
						ignore-alphas;
						ignore-numbers;
						ignore-modifiers;
		};

		spacemorph: space-morph {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_MORPH";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&macro_spcdot>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

		tspacemorph: thumb-space-morph {
			compatible = "zmk,behavior-hold-tap";
			label = "THUMB_SPACE_MORPH";
			#binding-cells = <2>;
			flavor = "balanced";
			tapping-term-ms = <175>;
			quick-tap-ms = <175>;
			global-quick-tap-ms = <220>;
			bindings = <&mo>, <&spacemorph>;
		};

	};

	combos {
		compatible = "zmk,combos";

		// left
		combo-esc {
			timeout-ms = <50>;
			global-quick-tap-ms = <220>;
			key-positions = <1 2>;
			layers = <LYDWARF LYQWERTY>;
			bindings = <&kp ESC>;
		};

		combo-capitalword {
			timeout-ms = <50>;
			global-quick-tap-ms = <220>;
			key-positions = <2 3>;
			layers = <LYDWARF LYQWERTY>;
			bindings = <&capitalword>;
		};

		//right
		combo-numword {
			timeout-ms = <50>;
			global-quick-tap-ms = <220>;
			key-positions = <6 7>;
			layers = <LYDWARF LYQWERTY LYNUMR>;
			bindings = <&numberword>;
		};

		combo-del {
			timeout-ms = <50>;
			global-quick-tap-ms = <220>;
			key-positions = <7 8>;
			layers = <LYDWARF LYQWERTY>;
			bindings = <&kp DEL>;
		};
		
		combo-mouse {
			timeout-ms = <50>;
			global-quick-tap-ms = <220>;
			key-positions = <26 27>;
			layers = <LYDWARF LYQWERTY LYMOUSE>;
			bindings = <&tog LYMOUSE>;
		};

	};

	macros {

		macro_spcdot: macro_spcdot {
			label = "SPACE_DOT";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &kp DOT &kp SPACE &sk LSHFT>;
		};

		dictation_macro: dictation_macro {
			label = "DICTATION_MACRO";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <200>;
			tap-ms = <200>;
			bindings
				= <&macro_press &kp LCTRL>
				, <&macro_tap &kp GRAVE>
				, <&macro_release &kp LCTRL>
				;
		};

		lock_lynav: lock_lynav {
			label = "lock_lynav";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &to LYDWARF &to LYNAV>;
		};

		lock_lynum: lock_lynum {
			label = "lock_lynum";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &to LYDWARF &to LYNUM>;
		};

		lock_lysyml: lock_lysyml {
			label = "lock_lysyml";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &to LYDWARF &to LYSYML>;
		};

		lock_lysymr: lock_lysymr {
			label = "lock_lysymr";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &to LYDWARF &to LYSYMR>;
		};

		lock_lyfn: lock_lyfn {
			label = "lock_lyfn";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &to LYDWARF &to LYFN>;
		};	

 		lock_lymedia: lock_lymedia {
			label = "lock_lymedia";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&macro_tap &to LYDWARF &to LYMEDIA>;
		};	

	};

	
	keymap {
		compatible = "zmk,keymap";
		
		default_layer {
			label = "Base";
			bindings = <
			&kp F &kp L &kp H &kp D &kp V           							&kp Z &kp G  &kp O &kp U &kp DOT 
			&hml LGUI S &hml LALT R &hml LSHIFT N &hml LCTRL T &kp M        	&kp P &hmr RCTRL Y &hmr RSHIFT E &hmr RALT I &hmr RGUI A
			&kp X &kp J &kp B &hll LYSCT K &kp Q           						&kp C &hlr LYSCT W &kp SQT &kp COMMA &kp SEMICOLON
			&tlt LYMEDIA ESC &tspacemorph LYNAV XXX &tlt LYSYMR TAB				&tlt LYSYML ENTER &tlt LYNUM BACKSPACE &tlt LYFN DELETE								
			>;
		};

		qwerty_layer {
			label = "QWERTY";
			bindings = <
			&kp Q &kp W &kp E &kp R &kp T										&kp Y &kp U  &kp I &kp O &kp P 
			&hml LGUI A &hml LALT S &hml LSHIFT D &hml LCTRL F &kp G			&kp H &hmr RCTRL J &hmr RSHIFT K &hmr RALT L &hmr RGUI SEMICOLON
			&kp Z &kp X &kp C &hll LYSCT V &kp B								&kp N &hlr LYSCT M &kp COMMA &kp DOT &kp SQT
			&tlt LYMEDIA ESC &tspacemorph LYNAV XXX &tlt LYSYMR TAB				&tlt LYSYML ENTER &tlt LYNUM BACKSPACE &tlt LYFN DELETE			
			>;
		};

		navigation_layer {
			label = "Navigation";
			bindings = <
			XXX XXX XXX XXX XXX												 	&kp PG_UP &kp HOME &kp UP &kp END &kp LG(UP)
			&kp LGUI &kp LALT &kp LSHIFT &kp LCTRL &kp LS(LC(LA(LGUI)))			&kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp LG(DOWN)				
			&to LYQWERTY &to LYDWARF &lock_lynum &lock_lynav XXX				XXX &kp LC(V) &kp LC(C) &kp LC(X) &kp LC(Z)
			___ XXX ___															&kp ENTER &kp BACKSPACE &kp DELETE
			>;
		};

		number_layer {
			label = "Number";
			bindings = <
			&kp LBKT &kp N7 &kp N8 &kp N9 &kp RBKT								XXX XXX XXX XXX XXX
			&kp N0 &kp N4 &kp N5 &kp N6 &kp MINUS								&kp CAPS &kp RCTRL &kp RSHIFT &kp RALT &kp RGUI
			&kp BSLH &kp N1 &kp N2 &kp N3 &kp FSLH  							XXX &lock_lynum &lock_lynav &to LYDWARF &to LYQWERTY
			&kp GRAVE &kp SPACE &kp EQUAL										___ XXX ___
			>;
		};

		left_symbol_layer {
			label = "Left Symbol";
			bindings = <
			&kp GRAVE &kp TILDE &kp CARET &kp DOLLAR XXX						XXX XXX XXX XXX XXX
			&kp STAR &kp EQUAL &kp MINUS &kp UNDERSCORE XXX						XXX &kp RCTRL &kp RSHIFT &kp RALT &kp RGUI
			&kp HASH &kp COLON &kp PLUS &kp AT XXX								XXX &lock_lysyml &lock_lysymr &to LYDWARF &to LYQWERTY
			&kp ESC &kp SPACE &kp TAB											___ ___ ___
			>;
		};

		right_symbol_layer {
			label = "Right Symbol";
			bindings = <
			XXX XXX XXX XXX XXX													&kp BSLH &kp LPAR &kp LBKT &kp LT &kp LBRC
			&kp LGUI &kp LALT &kp LSHIFT &kp LCTRL XXX							&kp FSLH &kp RPAR &kp RBKT &kp GT &kp RBRC
			&to LYQWERTY &to LYDWARF &lock_lysyml &lock_lysymr XXX				&kp PIPE &kp PERCENT &kp AMPERSAND &kp QUESTION &kp EXCLAMATION
			___ ___ ___															&kp ENTER &kp BACKSPACE &kp DELETE
			>;
		};

		function_layer {
			label = "Function";
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp PRINTSCREEN							XXX XXX XXX XXX XXX
			&kp F5 &kp F6 &kp F7 &kp F8 &kp SCROLLLOCK							XXX &kp RCTRL &kp RSHIFT &kp RALT &kp RGUI
			&kp F9 &kp F10 &kp F11 &kp F12 &kp PAUSE_BREAK						XXX &lock_lyfn &lock_lymedia &to LYDWARF &to LYQWERTY
			&kp ESC &kp SPACE &kp K_APP											___ ___ ___
			>;
		};

		media_layer {
			label = "Media";
			bindings = <
			XXX XXX XXX XXX XXX													XXX &kp C_BRI_DN &kp C_BRI_UP &kp C_AL_CALC XXX
			&kp LGUI &kp LALT &kp LSHIFT &kp LCTRL XXX							&out OUT_TOG &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE XXX
			&to LYQWERTY &to LYDWARF &lock_lyfn &lock_lymedia XXX				&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
			___ ___ ___															XXX &kp C_PLAY_PAUSE XXX
			>;
		};

		mouse_layer {
			label = "Mouse";
			bindings = <
			XXX XXX XXX XXX XXX													U_WH_U U_WH_L U_MS_U U_WH_R XXX
			U_MS_L U_MS_U U_MS_D U_MS_R XXX										U_WH_D U_MS_L U_MS_D U_MS_R XXX
			U_WH_L U_WH_U U_WH_D U_WH_R XXX										XXX XXX XXX XXX XXX
			U_BTN3 U_BTN1 U_BTN2												U_BTN2 U_BTN1 U_BTN3
			>;
		};

		number_right_layer {
			label = "Number right";
			bindings = <
			___ ___ ___ ___ ___													&kp FSLH &kp N7 &kp N8 &kp N9 &kp BSLH
			___ ___ ___ ___ ___													&kp COMMA &kp N4 &kp N5 &kp N6 &kp DOT
			___ ___ ___ ___ ___													&numberword &kp N1 &kp N2 &kp N3 &kp ENTER
			&kp ESC &kp SPACE &kp TAB											&kp BACKSPACE &kp N0 &kp DELETE
			>;
		};

		shortcut_layer {
			label = "Shortcut";
			bindings = <
			XXX XXX XXX XXX XXX													XXX XXX XXX XXX XXX
			&kp LGUI &kp LALT &kp LSHIFT &kp LCTRL XXX							XXX &kp RCTRL &kp RSHIFT &kp RALT &kp RGUI
			&kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V)	XXX							XXX &kp LC(V) &kp LC(C) &kp LC(X) &kp LC(Z)
			U_BTN3 U_BTN1 U_BTN2												U_BTN2 U_BTN1 U_BTN3
			>;
		};

	};
};
